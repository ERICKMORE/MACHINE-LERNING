import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load data (hypothetical dataset)
data = pd.read_csv('flight_prices.csv')

# Data preprocessing & feature engineering (simplified)
# Assuming data has columns: days_before_flight, season, day_of_week, airline, flight_duration, number_of_stops, price
data = pd.get_dummies(data, columns=['season', 'day_of_week', 'airline'])

X = data.drop('price', axis=1)
y = data['price']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = LinearRegression()
model.fit(X_train, y_train)

# Prediction
y_pred = model.predict(X_test)

# Post-process prediction: add $3.5 to the fares
y_pred += 3.5

# Calculate error (e.g., RMSE)
rmse = mean_squared_error(y_test, y_pred, squared=False)
print(f'RMSE: {rmse}')

# To predict prices for new data:
# new_data = ... (preprocess new data similarly)
# predicted_prices = model.predict(new_data) + 3.5
